(window.webpackJsonp=window.webpackJsonp||[]).push([[82],{575:function(s,t,a){"use strict";a.r(t);var n=a(30),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"for-循环语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-循环语句"}},[s._v("#")]),s._v(" for 循环语句")]),s._v(" "),a("p",[s._v("在 Python 中，for 循环是一种非常强大且常用的控制流语句。它允许我们遍历可迭代对象中的元素，并针对每个元素执行特定的操作。本文将深入探讨 Python 的 for 循环语句，并通过案例进行详细解读，帮助你更好地理解和应用它。")]),s._v(" "),a("h2",{attrs:{id:"_1-基本语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本语法"}},[s._v("#")]),s._v(" 1. 基本语法")]),s._v(" "),a("p",[s._v("for 循环的基本语法如下：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" 变量 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" 可迭代对象"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行操作")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("变量：用于在每次迭代中存储当前元素的变量名。\n可迭代对象：包含多个元素的对象，例如列表、元组、字符串等。\nfor 循环将依次遍历可迭代对象中的每个元素，并将当前元素赋值给变量。在每次迭代中，我们可以执行特定的操作，例如打印元素、对元素进行计算等。")]),s._v(" "),a("h2",{attrs:{id:"_2-案例-计算列表元素之和"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-案例-计算列表元素之和"}},[s._v("#")]),s._v(" 2. 案例：计算列表元素之和")]),s._v(" "),a("p",[s._v("让我们以一个计算列表元素之和的案例来详细解读 for 循环的用法：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("numbers "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\ntotal "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    total "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" num\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"列表元素之和:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" total"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("在上述案例中，我们有一个包含多个数字的列表 numbers。我们初始化变量 total 为 0，用于累加列表中的元素。通过 for 循环遍历 numbers 中的每个元素，每次迭代时将当前元素赋值给变量 num。在循环体中，我们将当前元素加到 total 中。最后，我们打印出列表元素之和。")]),s._v(" "),a("h2",{attrs:{id:"_3-案例-遍历字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-案例-遍历字符串"}},[s._v("#")]),s._v(" 3. 案例：遍历字符串")]),s._v(" "),a("p",[s._v("for 循环不仅可以用于遍历列表，还可以用于遍历其他可迭代对象，例如字符串。让我们看一个遍历字符串的案例：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("message "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello, World!"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" char "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("char"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("在上述案例中，我们有一个字符串 message，它包含了一句问候语。通过 for 循环遍历 message 中的每个字符，每次迭代时将当前字符赋值给变量 char。在循环体中，我们打印出当前字符。这样，我们就可以逐个打印出字符串中的每个字符。")]),s._v(" "),a("h2",{attrs:{id:"_4-案例-遍历字典"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-案例-遍历字典"}},[s._v("#")]),s._v(" 4. 案例：遍历字典")]),s._v(" "),a("p",[s._v("除了遍历序列类型的对象，for 循环还可以用于遍历字典。让我们看一个遍历字典的案例：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("student_scores "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Math"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"English"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("85")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Science"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("92")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" subject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" score "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" student_scores"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("items"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("subject "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('":"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" score"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("在上述案例中，我们有一个字典 student_scores，它存储了学生的各科成绩。通过 for 循环遍历 student_scores 中的键值对，每次迭代时将当前键赋值给变量 subject，将当前值赋值给变量 score。在循环体中，我们打印出科目和对应的分数。这样，我们就可以逐个打印出字典中的每个键值对。")]),s._v(" "),a("h2",{attrs:{id:"_5-循环控制-break-和-continue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-循环控制-break-和-continue"}},[s._v("#")]),s._v(" 5. 循环控制：break 和 continue")]),s._v(" "),a("p",[s._v("在 for 循环中，我们还可以使用 break 和 continue 来控制循环的行为。")]),s._v(" "),a("p",[s._v("break 语句用于提前退出循环，即使循环条件仍为真。\ncontinue 语句用于跳过当前迭代，直接进入下一迭代。\n让我们通过案例进一步理解这两个控制语句的使用：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[s._v("numbers "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当 num 等于 3 时提前退出循环")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当 num 等于 3 时跳过当前迭代，进入下一次迭代")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("在上述案例中，我们有一个列表 numbers，包含了一些数字。在第一个 for 循环中，当 num 等于 3 时，使用 break 语句提前退出循环。因此，只打印出了 1 和 2。在第二个 for 循环中，当 num 等于 3 时，使用 continue 语句跳过当前迭代，进入下一次迭代。因此，打印出了 1、2、4 和 5。")])])}),[],!1,null,null,null);t.default=r.exports}}]);