(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{616:function(n,v,t){"use strict";t.r(v);var _=t(30),a=Object(_.a)({},(function(){var n=this,v=n.$createElement,t=n._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h2",{attrs:{id:"django介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#django介绍"}},[n._v("#")]),n._v(" django介绍")]),n._v(" "),t("p",[n._v("Django 是一个高级的 Python Web 框架，旨在帮助开发者快速、高效地构建安全且可维护的 Web 应用程序。")]),n._v(" "),t("p",[n._v("以下是 Django 的一些主要特点和优势：")]),n._v(" "),t("ol",[t("li",[t("p",[n._v("强大的数据库支持：Django 提供了一个对象关系映射（ORM）系统，使得与数据库的交互变得简单直观。它支持多种常见的数据库，如 MySQL、PostgreSQL、SQLite 等，并可以自动处理数据库表的创建、更新和查询操作。")])]),n._v(" "),t("li",[t("p",[n._v("全功能的后台管理界面：Django 内置了一个功能强大且易于定制的后台管理系统。通过简单的配置，就可以为模型提供一个完整的 CRUD（创建、读取、更新、删除）界面，方便管理员对数据进行管理。")])]),n._v(" "),t("li",[t("p",[n._v("路由和视图：Django 具有清晰的路由机制，允许开发者将不同的 URL 映射到相应的视图函数或类。视图负责处理请求并返回响应，这使得 Web 应用的逻辑处理更加清晰和模块化。")])]),n._v(" "),t("li",[t("p",[n._v("模板系统：Django 提供了一个灵活的模板语言，用于生成动态的 HTML 页面。模板可以继承和复用，有助于保持页面风格的一致性，并提高开发效率。")])]),n._v(" "),t("li",[t("p",[n._v("安全性：Django 注重安全性，提供了多种内置的安全机制，如防止跨站脚本攻击（XSS）、跨站请求伪造（CSRF）等，帮助开发者构建安全的 Web 应用。")])]),n._v(" "),t("li",[t("p",[n._v("可扩展性：可以通过创建自定义的中间件、插件和应用来扩展 Django 的功能，满足各种复杂的业务需求。")])]),n._v(" "),t("li",[t("p",[n._v("社区和文档：Django 拥有活跃的社区和丰富的文档资源，这对于开发者在遇到问题时寻求帮助和学习非常有帮助。")])])]),n._v(" "),t("p",[n._v("总的来说，Django 为 Web 开发提供了一套完整的解决方案，适用于各种规模的项目，从简单的个人博客到复杂的企业级应用都能胜任。")]),n._v(" "),t("h3",{attrs:{id:"django的安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#django的安装"}},[n._v("#")]),n._v(" django的安装")]),n._v(" "),t("div",{staticClass:"language-md line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-md"}},[t("code",[n._v("【1】 pip安装\npip install django\n\n【2】离线包安装\n在官网：<https://www.djangoproject.com/download/> ， 下载 django-master.tar，解压后，在解压目录中 运行 cmd（或者在cmd中切换到解压目录），然后通过输入命令：\n\n\npython setup.py install \n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br")])]),t("p",[n._v("不同环境的安装示例：\n以下是在不同操作系统上安装 Django 正式版本的具体步骤：\n（一）Windows 系统\n打开命令提示符（CMD）。\n确保 Python 已添加到系统环境变量中。您可以在命令提示符中输入 python --version 来检查 Python 是否安装成功以及版本信息。\n输入以下命令安装 Django：pip install Django\n（二）Mac OS 系统\n打开终端应用程序。\n同样，先检查 Python 安装情况，输入 python3 --version 。\n使用以下命令安装 Django：pip3 install Django\n（三）Linux 系统（以 Ubuntu 为例）\n打开终端。\n检查 Python 版本，输入 python3 --version 。\n执行以下命令安装 Django：sudo apt-get update ，更新软件包列表。然后输入 sudo apt-get install python3-django\n四、可能遇到的常见问题和解决方法")]),n._v(" "),t("h3",{attrs:{id:"django术语"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#django术语"}},[n._v("#")]),n._v(" django术语")]),n._v(" "),t("ol",[t("li",[t("strong",[n._v("模型（Model）")]),n._v("：用于定义数据结构和数据库交互，它表示应用中的数据对象及其关系。")]),n._v(" "),t("li",[t("strong",[n._v("视图（View）")]),n._v("：负责处理业务逻辑和数据处理，决定如何响应客户端的请求，并返回相应的结果。")]),n._v(" "),t("li",[t("strong",[n._v("模板（Template）")]),n._v("：包含 HTML 代码和模板语法，用于将数据以特定的格式呈现给用户。")]),n._v(" "),t("li",[t("strong",[n._v("路由（URLconf）")]),n._v("：定义了 URL 与视图函数或类之间的映射关系，决定了不同的 URL 如何被处理。")]),n._v(" "),t("li",[t("strong",[n._v("ORM（Object-Relational Mapping，对象关系映射）")]),n._v("：Django 提供的一种机制，使开发者可以通过面向对象的方式操作数据库，而无需编写原始的 SQL 语句。")]),n._v(" "),t("li",[t("strong",[n._v("中间件（Middleware）")]),n._v("：是在请求和响应处理过程中的钩子，可以在全局范围内对请求和响应进行处理和修改。")]),n._v(" "),t("li",[t("strong",[n._v("表单（Form）")]),n._v("：用于处理用户输入的数据，进行验证和数据处理。")]),n._v(" "),t("li",[t("strong",[n._v("信号（Signal）")]),n._v("：一种在特定操作发生时发送的通知机制，允许应用的不同部分进行解耦的通信。")]),n._v(" "),t("li",[t("strong",[n._v("迁移（Migration）")]),n._v("：用于管理数据库结构的变更，确保数据库模式与模型的定义保持同步。")]),n._v(" "),t("li",[t("strong",[n._v("管理后台（Admin）")]),n._v("：Django 内置的一个强大的管理界面，方便管理员对数据进行管理和操作。")]),n._v(" "),t("li",[t("strong",[n._v("应用（App）")]),n._v("：Django 项目中的一个独立功能模块，具有自己的模型、视图、模板等。")]),n._v(" "),t("li",[t("strong",[n._v("上下文（Context）")]),n._v("：在模板渲染时传递给模板的数据字典，用于在模板中显示动态内容。")]),n._v(" "),t("li",[t("strong",[n._v("CSRF（Cross-Site Request Forgery）防护")]),n._v("：Django 内置的防止跨站请求伪造攻击的机制。")]),n._v(" "),t("li",[t("strong",[n._v("会话（Session）")]),n._v("：用于在服务器端存储用户相关的状态信息。")]),n._v(" "),t("li",[t("strong",[n._v("缓存（Cache）")]),n._v("：提高应用性能的机制，用于存储经常访问的数据，减少重复计算和数据库查询。")]),n._v(" "),t("li",[t("strong",[n._v("序列化（Serialization）")]),n._v("：将 Django 模型对象转换为可传输或存储的格式，如 JSON 或 XML。")]),n._v(" "),t("li",[t("strong",[n._v("分页（Pagination）")]),n._v("：将大量数据分割成多个页面进行展示的功能。")]),n._v(" "),t("li",[t("strong",[n._v("用户认证（Authentication）")]),n._v("：验证用户身份的过程，包括登录、注册等功能。")]),n._v(" "),t("li",[t("strong",[n._v("授权（Authorization）")]),n._v("：确定已认证用户是否具有执行特定操作的权限。")]),n._v(" "),t("li",[t("strong",[n._v("模板标签（Template Tags）")]),n._v("：在模板中用于执行逻辑操作、循环、条件判断等的特殊指令。")]),n._v(" "),t("li",[t("strong",[n._v("模板过滤器（Template Filters）")]),n._v("：用于对模板中的变量进行格式化和转换的函数。")]),n._v(" "),t("li",[t("strong",[n._v("静态文件（Static Files）")]),n._v("：如 CSS、JavaScript、图片等不需要动态生成的文件。")]),n._v(" "),t("li",[t("strong",[n._v("B/S和C/S")]),n._v(" Django是用于开发B/S架构的软件的，软件主要分为B/S架构和C/S架构： B/S：全称Browser/Server(浏览器/服务器)；C/S：全称Client/Server(客户端/服务器）")]),n._v(" "),t("li",[t("strong",[n._v("MTV")]),n._v("\nMTV 代表：\nM：Model（模型），负责与数据库交互，处理数据的存储和检索。\nT：Template（模板），用于定义数据的展示方式，通常是 HTML 模板，包含模板语法用于动态数据的嵌入。\nV：View（视图），处理业务逻辑，接收请求，获取数据，并选择合适的模板进行渲染，然后返回响应给用户")])]),n._v(" "),t("p",[n._v("25."),t("strong",[n._v("MVC")]),n._v("\nMVC 即 Model-View-Controller（模型 - 视图 - 控制器），是一种软件设计模式，广泛应用于软件开发，特别是在 Web 开发中。")]),n._v(" "),t("ul",[t("li",[t("strong",[n._v("Model（模型）")]),n._v("：负责处理数据和业务逻辑，与数据库进行交互，管理数据的存储、检索、更新和删除等操作。")]),n._v(" "),t("li",[t("strong",[n._v("View（视图）")]),n._v("：主要负责数据的展示，将模型中的数据以用户友好的方式呈现给用户，通常是生成 HTML 页面或其他用户界面元素。")]),n._v(" "),t("li",[t("strong",[n._v("Controller（控制器）")]),n._v("：作为模型和视图之间的桥梁，接收用户的输入和请求，根据请求调用相应的模型方法进行处理，然后选择合适的视图来展示处理结果。")])]),n._v(" "),t("p",[n._v("MVC 模式的主要优点包括：")]),n._v(" "),t("ol",[t("li",[n._v("提高代码的可维护性和可扩展性，不同部分的功能职责清晰分离。")]),n._v(" "),t("li",[n._v("促进团队协作，开发人员可以专注于特定的部分。")]),n._v(" "),t("li",[n._v("便于代码的复用和测试。")])]),n._v(" "),t("p",[n._v("许多流行的 Web 框架，如 Ruby on Rails 等，都采用了 MVC 模式或其变体。")])])}),[],!1,null,null,null);v.default=a.exports}}]);