(window.webpackJsonp=window.webpackJsonp||[]).push([[126],{618:function(v,_,a){"use strict";a.r(_);var n=a(30),t=Object(n.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h1",{attrs:{id:"django-之应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#django-之应用"}},[v._v("#")]),v._v(" django 之应用")]),v._v(" "),a("p",[v._v("Django 是一个强大的 Python Web 框架，它提供了丰富的应用来帮助开发者快速构建高效、安全的 Web 应用。")]),v._v(" "),a("p",[a("strong",[v._v("管理后台（Admin）应用")]),v._v("：\nDjango 自带了一个功能强大的管理后台应用。通过简单的配置，您可以对数据库中的数据进行管理，如创建、编辑、删除和查看记录。这为管理员提供了一个方便的界面来操作数据，而无需编写大量的前端代码。")]),v._v(" "),a("p",[a("strong",[v._v("认证（Auth）应用")]),v._v("：\n负责处理用户的注册、登录、权限管理和身份验证等功能。它提供了一套完善的用户模型和相关的认证机制，确保只有授权用户能够访问特定的页面和功能。")]),v._v(" "),a("p",[a("strong",[v._v("会话（Sessions）应用")]),v._v("：\n用于管理用户会话。它可以跟踪用户在网站上的活动状态，例如记住用户的登录状态、购物车信息等。")]),v._v(" "),a("p",[a("strong",[v._v("消息（Messages）应用")]),v._v("：\n帮助在不同页面和视图之间传递消息。例如，在用户操作成功或失败时显示相应的提示消息。")]),v._v(" "),a("p",[a("strong",[v._v("静态文件（Staticfiles）应用")]),v._v("：\n处理静态文件（如 CSS、JavaScript、图片等）的存储和服务。确保这些文件能够正确地被加载到网页中。")]),v._v(" "),a("p",[a("strong",[v._v("表单（Forms）应用")]),v._v("：\n提供了方便的方式来创建和处理表单。它可以自动进行数据验证、生成表单的 HTML 代码，并处理表单的提交。")]),v._v(" "),a("p",[a("strong",[v._v("模板（Templates）引擎")]),v._v("：\n允许您创建可重用的模板，以统一的方式呈现数据。这有助于保持网站的外观一致性，并提高开发效率。")]),v._v(" "),a("p",[a("strong",[v._v("数据库迁移（Migrations）应用")]),v._v("：\n能够方便地管理数据库结构的变更。当您修改模型时，Django 可以自动生成迁移脚本，并应用到数据库中，确保数据库结构与模型的定义保持同步。")]),v._v(" "),a("p",[v._v("这些只是 Django 核心应用的一部分，通过使用第三方库和扩展，还可以进一步丰富和增强应用的功能。")]),v._v(" "),a("h2",{attrs:{id:"用户如何创建一个自定义应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用户如何创建一个自定义应用"}},[v._v("#")]),v._v(" 用户如何创建一个自定义应用？")]),v._v(" "),a("p",[v._v("在 Django 中创建应用（app）可以通过以下步骤完成：")]),v._v(" "),a("ol",[a("li",[a("p",[v._v("确保您已经在 Django 项目的根目录下。")])]),v._v(" "),a("li",[a("p",[v._v("使用以下命令来创建一个新的应用：")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("python manage.py startapp app_name\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("其中，"),a("code",[v._v("app_name")]),v._v(" 是您想要为应用指定的名称。")])])]),v._v(" "),a("p",[v._v("执行上述命令后，Django 会在项目目录中创建一个名为 "),a("code",[v._v("app_name")]),v._v(" 的文件夹，其中包含了应用的基本结构和一些初始文件，例如：")]),v._v(" "),a("ul",[a("li",[a("code",[v._v("models.py")]),v._v("：用于定义数据库模型。")]),v._v(" "),a("li",[a("code",[v._v("views.py")]),v._v("：包含视图函数，处理请求并返回响应。")]),v._v(" "),a("li",[a("code",[v._v("admin.py")]),v._v("：用于在 Django 管理后台注册模型。")]),v._v(" "),a("li",[a("code",[v._v("apps.py")]),v._v("：应用的配置文件。")]),v._v(" "),a("li",[a("code",[v._v("tests.py")]),v._v("：用于编写应用的测试代码。")])]),v._v(" "),a("p",[v._v("创建应用后，您还需要在项目的 "),a("code",[v._v("settings.py")]),v._v(" 文件中的 "),a("code",[v._v("INSTALLED_APPS")]),v._v(" 列表中添加新创建的应用名称，以便 Django 能够识别和加载它。")])])}),[],!1,null,null,null);_.default=t.exports}}]);