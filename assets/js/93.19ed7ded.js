(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{586:function(t,s,a){"use strict";a.r(s);var n=a(30),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("hr"),t._v(" "),a("h1",{attrs:{id:"python-正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python-正则表达式"}},[t._v("#")]),t._v(" Python 正则表达式")]),t._v(" "),a("h2",{attrs:{id:"一、正则表达式概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、正则表达式概述"}},[t._v("#")]),t._v(" 一、正则表达式概述")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("概念")]),t._v("\n正则表达式是一种用于操作字符串的逻辑公式，它由事先定义好的特定字符及这些字符的组合构成一个“规则字符串”，用于表达对字符串的过滤逻辑。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("用途")])])])]),t._v(" "),a("ul",[a("li",[t._v("匹配和查找文本：能够快速定位包含特定模式的文本，如查找特定单词的句子、识别邮箱和电话等。")]),t._v(" "),a("li",[t._v("数据清洗和处理：帮助去除特定字符或标签，提取有效信息。")]),t._v(" "),a("li",[t._v("表单验证：用于校验用户输入的表单数据，如验证邮箱地址的合法性。")]),t._v(" "),a("li",[t._v("字符串替换：将符合特定模式的字符串替换为其他内容。")]),t._v(" "),a("li",[t._v("提取信息：从文本中提取所需的关键信息，例如网页中的链接、日志中的重要内容。")])]),t._v(" "),a("h2",{attrs:{id:"二、python-中的正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、python-中的正则表达式"}},[t._v("#")]),t._v(" 二、Python 中的正则表达式")]),t._v(" "),a("p",[t._v("Python 内置了 "),a("code",[t._v("re")]),t._v(" 模块，其中封装了一系列用于处理正则表达式的函数。以下是一个简单示例：")]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\nraw_str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc12def'")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\d+'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" raw_str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 12")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h2",{attrs:{id:"三、re-模块常用函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、re-模块常用函数"}},[t._v("#")]),t._v(" 三、"),a("code",[t._v("re")]),t._v(" 模块常用函数")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("re.match")]),t._v("\n该函数尝试从字符串的起始位置匹配一个模式，如果起始位置不匹配，"),a("code",[t._v("match")]),t._v(" 函数将返回 "),a("code",[t._v("None")]),t._v("。其函数签名为 "),a("code",[t._v("re.match(pattern, string, flags=0)")]),t._v(" 。")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("参数说明：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("pattern")]),t._v("：要匹配的正则表达式。")]),t._v(" "),a("li",[a("code",[t._v("string")]),t._v("：待匹配的字符串。")]),t._v(" "),a("li",[a("code",[t._v("flags")]),t._v("：标志位，用于控制匹配方式，如是否区分大小写、多行匹配等。")])])]),t._v(" "),a("li",[a("p",[t._v("常见标志：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("re.I")]),t._v("：使匹配对大小写不敏感。")]),t._v(" "),a("li",[a("code",[t._v("re.L")]),t._v("：进行本地化识别匹配。")]),t._v(" "),a("li",[a("code",[t._v("re.M")]),t._v("：支持多行匹配。")]),t._v(" "),a("li",[a("code",[t._v("re.S")]),t._v("：使 "),a("code",[t._v(".")]),t._v(" 能匹配包括换行符在内的所有字符。")]),t._v(" "),a("li",[a("code",[t._v("re.U")]),t._v("：根据 Unicode 字符集解析字符。")]),t._v(" "),a("li",[a("code",[t._v("re.X")]),t._v("：为提高可读性，忽略空格和 "),a("code",[t._v("#")]),t._v(" 后的注释。")])])])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("code",[t._v("re.search")]),t._v(" "),a("code",[t._v("re.search")]),t._v(" 函数会扫描整个字符串并返回第一个成功的匹配。")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("search")]),t._v(" 与 "),a("code",[t._v("match")]),t._v(" 的区别：\n"),a("ul",[a("li",[a("code",[t._v("match")]),t._v(" 要求从字符串的起始位置进行匹配。")])])])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\nraw_str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc12def'")]),t._v("\nresult1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\d+'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" raw_str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nresult2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\d+'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" raw_str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# None")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[a("code",[t._v("re.sub")]),t._v("\n用于替换字符串中的匹配项。函数签名为 "),a("code",[t._v("re.sub(pattern, repl, string, count, flags)")]),t._v(" 。")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("参数说明：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("pattern")]),t._v("：匹配的正则表达式。")]),t._v(" "),a("li",[a("code",[t._v("repl")]),t._v("：替换的字符串，也可以是一个函数。")]),t._v(" "),a("li",[a("code",[t._v("string")]),t._v("：要匹配的字符串。")]),t._v(" "),a("li",[a("code",[t._v("count")]),t._v("：模式匹配后替换的最大次数，默认替换所有。")]),t._v(" "),a("li",[a("code",[t._v("flags")]),t._v("：标志位，用于控制正则表达式的匹配方式。")])])]),t._v(" "),a("li",[a("p",[t._v("简单替换示例：")])])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\nphone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2024-959-459"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除非数字'-'")]),t._v("\nnum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'\\D'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" phone"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2024959459")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("ul",[a("li",[t._v("函数模式替换示例：")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将匹配的数字乘以 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("double")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matched"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matched"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'value'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nraw_str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A12B3C'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'(?P<value>\\d+)'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" double"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" raw_str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# A24B6C")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[a("code",[t._v("re.compile")]),t._v(" "),a("code",[t._v("compile")]),t._v(" 函数用于编译正则表达式，生成一个正则表达式 "),a("code",[t._v("Pattern")]),t._v(" 对象，供 "),a("code",[t._v("match")]),t._v(" 和 "),a("code",[t._v("search")]),t._v(" 使用。函数签名为 "),a("code",[t._v("re.compile(pattern[, flags])")]),t._v(" 。")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\npattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("compile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'\\d+'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 用于匹配至少一个数字")]),t._v("\nm "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'12twothree34four'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查找头部，没有匹配")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 12")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ol",{attrs:{start:"5"}},[a("li",[a("code",[t._v("re.findall")]),t._v("\n在字符串中查找正则表达式所匹配的所有子串，并以列表形式返回。函数签名为 "),a("code",[t._v("findall(pattern, string, flags=0)")]),t._v(" 。")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\npattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("compile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'\\d+'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查找数字")]),t._v("\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc 123 def 456'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [123, 456]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[t._v("如果匹配不到，将返回空列表。")]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[a("code",[t._v("re.finditer")]),t._v("\n在字符串中查找正则表达式所匹配的所有子串，并将它们作为一个迭代器返回。函数签名为 "),a("code",[t._v("re.finditer(pattern, string, flags=0)")]),t._v(" 。")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\nit "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finditer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('r"\\d+"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"12a32bc43jf3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" it"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 12 32 43 3")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("ol",{attrs:{start:"7"}},[a("li",[a("code",[t._v("re.split")]),t._v("\n按照能够匹配的子串将字符串分割后返回列表。函数签名为 "),a("code",[t._v("re.split(pattern, string[, maxsplit=0, flags=0])")]),t._v(" 。")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("maxsplit")]),t._v("：分隔次数，"),a("code",[t._v("maxsplit=1")]),t._v(" 表示分隔一次，默认为 0，即不限制分隔次数。")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\W+'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello,world,'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ['hello','world','']")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\nre"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("split"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b*'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("如果找不到匹配的字符串，"),a("code",[t._v("split")]),t._v(" 函数不会进行分割。")]),t._v(" "),a("ol",{attrs:{start:"8"}},[a("li",[t._v("分组\n在正则表达式中，"),a("code",[t._v("group()")]),t._v(" 函数用于提取分组截获的字符串。")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123abc456"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"([0-9]*)([a-z]*)([0-9]*)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 123abc456，返回整体")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"([0-9]*)([a-z]*)([0-9]*)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 123")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"([0-9]*)([a-z]*)([0-9]*)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# abc")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"([0-9]*)([a-z]*)([0-9]*)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 456")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("正则表达式中的三组括号将匹配结果分成三组，"),a("code",[t._v("group()")]),t._v(" 等同于 "),a("code",[t._v("group(0)")]),t._v("，即返回匹配正则表达式的整体结果，"),a("code",[t._v("group(1)")]),t._v(" 列出第一个括号匹配的部分，"),a("code",[t._v("group(2)")]),t._v(" 列出第二个括号匹配的部分，"),a("code",[t._v("group(3)")]),t._v(" 列出第三个括号匹配的部分。")]),t._v(" "),a("ol",{attrs:{start:"9"}},[a("li",[t._v("贪婪模式与非贪婪模式")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\ntext "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0123456"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 贪婪模式")]),t._v("\nresult1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\d+'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 非贪婪模式")]),t._v("\nresult2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("match")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\d+?'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 0123456")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 0")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h2",{attrs:{id:"四、正则表达式模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四、正则表达式模式"}},[t._v("#")]),t._v(" 四、正则表达式模式")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("^")]),t._v("：匹配字符串的开头。")]),t._v(" "),a("li",[a("code",[t._v("$")]),t._v("：匹配字符串的末尾。")]),t._v(" "),a("li",[a("code",[t._v(".")]),t._v("：匹配任意字符，但不包括换行符。当 "),a("code",[t._v("re.DOTALL")]),t._v(" 标记被指定时，可以匹配包括换行符的任意字符。")]),t._v(" "),a("li",[a("code",[t._v("[...]")]),t._v("：表示一组字符，单独列出："),a("code",[t._v("[amk]")]),t._v(" 匹配 "),a("code",[t._v("'a'")]),t._v("、"),a("code",[t._v("'m'")]),t._v(" 或 "),a("code",[t._v("'k'")]),t._v(" 。")]),t._v(" "),a("li",[a("code",[t._v("[^...]")]),t._v("：匹配不在 "),a("code",[t._v("[]")]),t._v(" 中的字符，例如："),a("code",[t._v("[^abc]")]),t._v(" 匹配除了 "),a("code",[t._v("a")]),t._v("、"),a("code",[t._v("b")]),t._v("、"),a("code",[t._v("c")]),t._v(" 之外的字符。")]),t._v(" "),a("li",[a("code",[t._v("re*")]),t._v("：匹配 0 个或多个表达式。")]),t._v(" "),a("li",[a("code",[t._v("re+")]),t._v("：匹配 1 个或多个表达式。")]),t._v(" "),a("li",[a("code",[t._v("re?")]),t._v("：匹配 0 个或 1 个由前面的正则表达式定义的片段，采用非贪婪方式。")]),t._v(" "),a("li",[a("code",[t._v("re{n}")]),t._v("：精确匹配 "),a("code",[t._v("n")]),t._v(" 个前面的表达式。例如，"),a("code",[t._v("o{2}")]),t._v(" 不能匹配 "),a("code",[t._v('"Bob"')]),t._v(" 中的 "),a("code",[t._v("'o'")]),t._v("，但能匹配 "),a("code",[t._v('"food"')]),t._v(" 中的两个 "),a("code",[t._v("'o'")]),t._v(" 。")]),t._v(" "),a("li",[a("code",[t._v("re{n,}")]),t._v("：匹配 "),a("code",[t._v("n")]),t._v(" 个及以上前面的表达式。例如，"),a("code",[t._v("o{2,}")]),t._v(" 不能匹配 "),a("code",[t._v('"Bob"')]),t._v(" 中的 "),a("code",[t._v("'o'")]),t._v("，但能匹配 "),a("code",[t._v('"food"')]),t._v(" 中的两个及以上 "),a("code",[t._v("'o'")]),t._v(" 。")]),t._v(" "),a("li",[a("code",[t._v("re{n,m}")]),t._v("：匹配 "),a("code",[t._v("n")]),t._v(" 到 "),a("code",[t._v("m")]),t._v(" 次由前面的正则表达式定义的片段，采用贪婪方式。")]),t._v(" "),a("li",[a("code",[t._v("a|b")]),t._v("：匹配 "),a("code",[t._v("a")]),t._v(" 或 "),a("code",[t._v("b")]),t._v(" 。")]),t._v(" "),a("li",[a("code",[t._v("(re)")]),t._v("：对正则表达式进行分组并记住匹配的文本。")]),t._v(" "),a("li",[a("code",[t._v("(?imx)")]),t._v("：正则表达式包含三种可选标志："),a("code",[t._v("i")]),t._v("、"),a("code",[t._v("m")]),t._v(" 或 "),a("code",[t._v("x")]),t._v(" 。只影响括号中的区域。")]),t._v(" "),a("li",[a("code",[t._v("(?-imx)")]),t._v("：正则表达式关闭 "),a("code",[t._v("i")]),t._v("、"),a("code",[t._v("m")]),t._v(" 或 "),a("code",[t._v("x")]),t._v(" 可选标志。只影响括号中的区域。")]),t._v(" "),a("li",[a("code",[t._v("(?:re)")]),t._v("：类似于 "),a("code",[t._v("(...)")]),t._v("，但不表示一个组。")]),t._v(" "),a("li",[a("code",[t._v("(?imx:re)")]),t._v("：在括号中使用 "),a("code",[t._v("i")]),t._v("、"),a("code",[t._v("m")]),t._v(" 或 "),a("code",[t._v("x")]),t._v(" 可选标志。")]),t._v(" "),a("li",[a("code",[t._v("(?-imx:re)")]),t._v("：在括号中不使用 "),a("code",[t._v("i")]),t._v("、"),a("code",[t._v("m")]),t._v(" 或 "),a("code",[t._v("x")]),t._v(" 可选标志。")]),t._v(" "),a("li",[a("code",[t._v("(?#...)")]),t._v("：注释。")]),t._v(" "),a("li",[a("code",[t._v("(?=re)")]),t._v("：前向肯定界定符。如果所含正则表达式在当前位置成功匹配则成功，否则失败。但一旦所含表达式已经尝试，匹配引擎不会回溯；模式的剩余部分仍会在界定符的右边尝试。")]),t._v(" "),a("li",[a("code",[t._v("(?!re)")]),t._v("：前向否定界定符。与肯定界定符相反；当所含表达式不能在字符串当前位置匹配时成功。")]),t._v(" "),a("li",[a("code",[t._v("(?>re)")]),t._v("：匹配的独立模式，省去回溯。")]),t._v(" "),a("li",[a("code",[t._v("\\w")]),t._v("：匹配字母数字及下划线。")]),t._v(" "),a("li",[a("code",[t._v("\\W")]),t._v("：匹配非字母数字及下划线。")]),t._v(" "),a("li",[a("code",[t._v("\\s")]),t._v("：匹配任意空白字符，等价于 "),a("code",[t._v("[\\t\\n\\r\\f\\v]")]),t._v(" 。")]),t._v(" "),a("li",[a("code",[t._v("\\S")]),t._v("：匹配任意非空白字符。")]),t._v(" "),a("li",[a("code",[t._v("\\d")]),t._v("：匹配任意数字，等价于 "),a("code",[t._v("[0-9]")]),t._v(" 。")]),t._v(" "),a("li",[a("code",[t._v("\\D")]),t._v("：匹配任意非数字。")]),t._v(" "),a("li",[a("code",[t._v("\\A")]),t._v("：匹配字符串开始。")]),t._v(" "),a("li",[a("code",[t._v("\\Z")]),t._v("：匹配字符串结束，如果存在换行符，只匹配到换行前的结束字符串。")]),t._v(" "),a("li",[a("code",[t._v("\\z")]),t._v("：匹配字符串结束。")]),t._v(" "),a("li",[a("code",[t._v("\\G")]),t._v("：匹配最后匹配完成的位置。")]),t._v(" "),a("li",[a("code",[t._v("\\b")]),t._v("：匹配一个单词边界，即单词和空格之间的位置。例如，"),a("code",[t._v("'e'")]),t._v(" 可以匹配 "),a("code",[t._v('"never"')]),t._v(" 中的 "),a("code",[t._v("'er'")]),t._v("，但不能匹配 "),a("code",[t._v('"verb"')]),t._v(" 中的 "),a("code",[t._v("'er'")]),t._v(" 。")]),t._v(" "),a("li",[a("code",[t._v("\\B")]),t._v("：匹配非单词边界。"),a("code",[t._v("'er\\B'")]),t._v(" 能匹配 "),a("code",[t._v('"verb"')]),t._v(" 中的 "),a("code",[t._v("'er'")]),t._v("，但不能匹配 "),a("code",[t._v('"never"')]),t._v(" 中的 "),a("code",[t._v("'er'")]),t._v(" 。")]),t._v(" "),a("li",[a("code",[t._v("\\n")]),t._v("、"),a("code",[t._v("\\t")]),t._v(" 等：匹配一个换行符、制表符等。")]),t._v(" "),a("li",[a("code",[t._v("\\1...\\9")]),t._v("：匹配第 "),a("code",[t._v("n")]),t._v(" 个分组的内容。")]),t._v(" "),a("li",[a("code",[t._v("\\10")]),t._v("：匹配第 "),a("code",[t._v("n")]),t._v(" 个分组的内容，如果它已匹配。否则指的是八进制字符码的表达式。")])]),t._v(" "),a("h2",{attrs:{id:"五、常用示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五、常用示例"}},[t._v("#")]),t._v(" 五、常用示例")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("匹配 "),a("code",[t._v('"Python"')]),t._v(" 或 "),a("code",[t._v('"python"')]),t._v(" ："),a("code",[t._v("[Pp]ython")])])]),t._v(" "),a("li",[a("p",[t._v("匹配括号内的任意字母："),a("code",[t._v("[aeiou]")])])]),t._v(" "),a("li",[a("p",[t._v("匹配任意字母或数字："),a("code",[t._v("[a-zA-Z0-9]")])])]),t._v(" "),a("li",[a("p",[t._v("匹配除了数字外的字符："),a("code",[t._v("[^0-9]")]),t._v(" 或 "),a("code",[t._v("\\D")])])]),t._v(" "),a("li",[a("p",[t._v("匹配邮箱："),a("code",[t._v("[\\w\\.-]+@\\.\\w+")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("findall")]),t._v(" 多个匹配模式，返回元组列表")])])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("findall"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'(\\w+)=(\\d+)'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'width=20,height=10'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [('width', '20'), ('height', '10')]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ol",{attrs:{start:"7"}},[a("li",[t._v("返回字典对象")])]),t._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" re\n\nraw_str "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'132929199703271118'")]),t._v("\n\nresult "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" re"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'(?P<province>\\d{3})(?P<city>\\d{3})(?P<birthday>\\d{8})'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" raw_str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("strong",[t._v("一个简单的实际案例")])]),t._v(" "),a("ol",[a("li",[t._v("提取网页中的所有链接\n假设我们有一段网页的 HTML 代码如下：")])]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("这是一个示例页面，包含以下链接："),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("https://www.example1.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("示例 1"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" 和 "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("https://www.example2.com/page"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("示例 2"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("我们可以使用正则表达式 "),a("code",[t._v('href="(https?://[^\\s]+)"')]),t._v(" 来提取出所有的链接。")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[t._v("验证密码强度\n要求密码必须包含至少一个大写字母、一个小写字母、一个数字和一个特殊字符，长度在 8 到 16 位之间。可以使用正则表达式 "),a("code",[t._v("^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,16}$")]),t._v(" 进行验证。")])]),t._v(" "),a("li",[a("p",[t._v("去除文本中的多余空格\n如果有一个文本字符串 "),a("code",[t._v("“ 这 是 一 个 有 很 多 空 格 的 文 本 ”")]),t._v(" ，我们可以使用正则表达式 "),a("code",[t._v("\\s+")]),t._v(" 来匹配多个空格，然后用 "),a("code",[t._v("re.sub")]),t._v(" 函数将其替换为一个空格，从而达到去除多余空格的目的。")])]),t._v(" "),a("li",[a("p",[t._v("提取文件名中的扩展名\n例如文件名 "),a("code",[t._v("“file.txt”")]),t._v(" ，使用正则表达式 "),a("code",[t._v("\\.\\w+$")]),t._v(" 可以提取出 "),a("code",[t._v(".txt")]),t._v(" 这个扩展名。")])])]),t._v(" "),a("p",[t._v("待更新")])])}),[],!1,null,null,null);s.default=e.exports}}]);